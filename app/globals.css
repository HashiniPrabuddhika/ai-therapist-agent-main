@import "tailwindcss";

@layer base {
  :root {
    --background: 180 20% 99%;
    --foreground: 200 8% 24%;
    --card: 180 20% 99%;
    --card-foreground: 200 8% 24%;
    --popover: 180 20% 99%;
    --popover-foreground: 200 8% 24%;
    --border: 214.3 31.8% 91.4%;
    --primary: 150 30% 60%;
    --primary-foreground: 150 40% 16%;
    --secondary: 250 20% 96%;
    --secondary-foreground: 250 10% 30%;
    --muted: 210 20% 96%;
    --muted-foreground: 215 16% 45%;
    --accent: 180 25% 95%;
    --accent-foreground: 200 8% 24%;
    --destructive: 0 84% 60%;
    --destructive-foreground: 210 20% 98%;
    --input: 200 10% 90%;
    --ring: 150 30% 60%;
    --radius: 0.75rem;
  }

  .dark {
    --background: 200 50% 3%;
    --foreground: 210 20% 98%;
    --card: 200 50% 3%;
    --card-foreground: 210 20% 98%;
    --popover: 200 50% 3%;
    --popover-foreground: 210 20% 98%;
    --primary: 150 30% 70%;
    --primary-foreground: 150 40% 16%;
    --secondary: 250 20% 20%;
    --secondary-foreground: 210 20% 98%;
    --muted: 200 50% 10%;
    --muted-foreground: 210 20% 70%;
    --accent: 200 50% 10%;
    --accent-foreground: 210 20% 98%;
    --destructive: 0 62% 30%;
    --destructive-foreground: 210 20% 98%;
    --border: 200 50% 10%;
    --input: 200 50% 10%;
    --ring: 150 30% 70%;
  }

  html {
    scroll-behavior: smooth;
  }

  body {
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
    transition: background-color 0.2s, color 0.2s;
  }
}

@keyframes float {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-20px); }
}

@keyframes wave {
  0%, 100% { transform: rotate(-5deg); }
  50% { transform: rotate(5deg); }
}

@keyframes scroll {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(8px); }
}

@keyframes pulse-gentle {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.7; }
}

@keyframes gradient {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

@layer utilities {
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  .animate-wave {
    animation: wave 2s ease-in-out infinite;
  }

  .animate-scroll {
    animation: scroll 2s ease-in-out infinite;
  }

  .animate-pulse-gentle {
    animation: pulse-gentle 2s ease-in-out infinite;
  }

  .gradient-animation {
    background-size: 400% 400%;
    animation: gradient 15s ease infinite;
  }

  .hover-lift {
    transition: transform 0.2s ease-out;
  }

  .hover-lift:hover {
    transform: translateY(-4px);
  }

  .gentle-shadow {
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    transition: box-shadow 0.2s ease;
  }

  .gentle-shadow:hover {
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.15);
  }

  .bg-size-200 {
    background-size: 200% 100%;
  }

  .bg-pos-0 {
    background-position: 0% 0%;
  }

  .bg-pos-100 {
    background-position: 100% 0%;
  }
}

@layer components {
  .input-base {
    display: flex;
    height: 2.25rem; /* 9 * 0.25rem = 36px */
    width: 100%;
    border-radius: calc(var(--radius) - 2px);
    border: 1px solid hsl(var(--input));
    background-color: transparent;
    padding: 0.25rem 0.75rem;
    font-size: 1rem;
    line-height: 1.5rem;
    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
    transition: background-color 0.2s, color 0.2s, border-color 0.2s, box-shadow 0.2s;
    color: hsl(var(--foreground));
  }

  .input-base::placeholder {
    color: hsl(var(--muted-foreground));
  }

  .input-base:focus-visible {
    outline: none;
    box-shadow: 0 0 0 1px hsl(var(--ring));
  }

  .input-base:disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }

  .input-base::file-selector-button {
    border: 0;
    background-color: transparent;
    font-size: 0.875rem;
    font-weight: 500;
    color: hsl(var(--foreground));
    margin-right: 0.5rem;
    cursor: pointer;
  }

  /* Responsive text size */
  @media (min-width: 768px) {
    .input-base {
      font-size: 0.875rem;
      line-height: 1.25rem;
    }
  }
}

@layer components {
  .button-base {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    white-space: nowrap;
    border-radius: calc(var(--radius) - 2px);
    font-size: 0.875rem;
    font-weight: 500;
    transition: background-color 0.2s, color 0.2s, box-shadow 0.2s;
  }

  .button-base:focus-visible {
    outline: none;
    box-shadow: 0 0 0 1px hsl(var(--ring));
  }

  .button-base:disabled {
    pointer-events: none;
    opacity: 0.5;
  }

  .button-base svg {
    pointer-events: none;
    width: 1rem;
    height: 1rem;
    flex-shrink: 0;
  }

  /* Variants */
  .button-default {
    background-color: hsl(var(--primary));
    color: hsl(var(--primary-foreground));
    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  }

  .button-default:hover:not(:disabled) {
    background-color: hsl(var(--primary) / 0.9);
  }

  .button-destructive {
    background-color: hsl(var(--destructive));
    color: hsl(var(--destructive-foreground));
    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  }

  .button-destructive:hover:not(:disabled) {
    background-color: hsl(var(--destructive) / 0.9);
  }

  .button-outline {
    border: 1px solid hsl(var(--input));
    background-color: hsl(var(--background));
    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  }

  .button-outline:hover:not(:disabled) {
    background-color: hsl(var(--accent));
    color: hsl(var(--accent-foreground));
  }

  .button-secondary {
    background-color: hsl(var(--secondary));
    color: hsl(var(--secondary-foreground));
    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  }

  .button-secondary:hover:not(:disabled) {
    background-color: hsl(var(--secondary) / 0.8);
  }

  .button-ghost:hover:not(:disabled) {
    background-color: hsl(var(--accent));
    color: hsl(var(--accent-foreground));
  }

  .button-link {
    color: hsl(var(--primary));
    text-underline-offset: 4px;
  }

  .button-link:hover:not(:disabled) {
    text-decoration: underline;
  }

  /* Sizes */
  .button-default-size {
    height: 2.25rem;
    padding: 0.5rem 1rem;
  }

  .button-sm {
    height: 2rem;
    border-radius: calc(var(--radius) - 2px);
    padding: 0 0.75rem;
    font-size: 0.75rem;
  }

  .button-lg {
    height: 2.5rem;
    border-radius: calc(var(--radius) - 2px);
    padding: 0 2rem;
  }

  .button-icon {
    height: 2.25rem;
    width: 2.25rem;
  }

  /* Label Styles */
  .label-base {
    font-size: 0.875rem;
    font-weight: 500;
    line-height: 1;
    color: hsl(var(--foreground));
    transition: color 0.2s;
  }

  .label-base[data-disabled],
  .label-base:has(+ :disabled),
  .label-base:has(+ [disabled]) {
    cursor: not-allowed;
    opacity: 0.7;
  }

  /* Peer disabled support - when label is before a disabled input */
  :has(> .label-base) + :disabled ~ .label-base,
  :has(> .label-base) + [disabled] ~ .label-base {
    cursor: not-allowed;
    opacity: 0.7;
  }
}